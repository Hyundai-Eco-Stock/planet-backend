pipeline {
    agent { label 'built-in' }

    tools {
        gradle 'gradle 8.14'
        jdk 'jdk-21'
    }

    environment {
        SERVICE_NAME = 'planet-backend'
        HARBOR_URL = 'https://localhost:8443'
        HARBOR_REPO = 'localhost:8443/planet'
    }

    stages {
        stage('Check workspace') {
            steps {
                sh 'pwd && ls -al'
            }
        }

        stage('Clean') {
            steps {
                sh '''
                    ./gradlew clean
                '''
            }
        }

        stage('Build') {
            steps {
		            sh '''
                ./gradlew build -x test
                '''
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    // Git 커밋 SHA를 이미지 태그로 사용
                    def IMAGE_TAG = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()

                    withCredentials([usernamePassword(credentialsId: 'Harbor_Credentials', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                        sh """
                        echo "$HARBOR_PASS" | docker login $HARBOR_URL -u "$HARBOR_USER" --password-stdin

                        docker rmi -f $HARBOR_REPO/$SERVICE_NAME:latest || true
                        docker build --no-cache -t $HARBOR_REPO/$SERVICE_NAME:${IMAGE_TAG} .
                        docker push $HARBOR_REPO/$SERVICE_NAME:${IMAGE_TAG}

                        docker tag $HARBOR_REPO/$SERVICE_NAME:${IMAGE_TAG} $HARBOR_REPO/$SERVICE_NAME:latest
                        docker push $HARBOR_REPO/$SERVICE_NAME:latest
                        """
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'Harbor_Credentials', usernameVariable: 'HARBOR_USER', passwordVariable: 'HARBOR_PASS')]) {
                    sh '''
                    echo "$HARBOR_PASS" | docker login $HARBOR_URL -u "$HARBOR_USER" --password-stdin
                    docker compose pull $SERVICE_NAME || docker compose pull
                    docker compose down || true
                    docker compose up -d --no-deps --force-recreate $SERVICE_NAME
                    '''
                }
            }
        }
    }
}