<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.phoenix.planet.mapper.MemberStockInfoMapper">

    <select id="findPersonalStockInfoById"
            resultType="org.phoenix.planet.dto.eco_stock.raw.MemberStockInfo">
        SELECT
        msi.MEMBER_STOCK_INFO_ID as memberStockInfoId,
        m.MEMBER_ID as memberId,
        msi.ECO_STOCK_ID as ecoStockId,
        COALESCE(msi.CURRENT_TOTAL_QUANTITY, 0) as currentTotalQuantity,
        COALESCE(msi.CURRENT_TOTAL_AMOUNT, 0) as currentTotalAmount,
        m.POINT as point
        FROM MEMBER m
        LEFT JOIN MEMBER_STOCK_INFO msi
        ON m.MEMBER_ID = msi.MEMBER_ID
        AND msi.ECO_STOCK_ID = #{ecoStockId}
        WHERE m.MEMBER_ID = #{memberId}
    </select>
    
    <!-- 회원 스톡 정보 신규 생성 -->
    <insert id="insertMemberStockInfo">
        <selectKey keyProperty="memberStockInfoId" resultType="Long" order="BEFORE">
            SELECT SEQ_ORDER_HISTORY.NEXTVAL FROM dual
        </selectKey>
        
        INSERT INTO member_stock_info (
        member_stock_info_id,
        member_id,
        eco_stock_id,
        current_total_quantity,
        current_total_amount,
        created_at,
        updated_at
        ) VALUES (
        #{memberStockInfoId},
        #{memberId},
        #{ecoStockId},
        #{quantity},
        #{amount},
        SYSDATE,
        SYSDATE
        )
    </insert>
    
    <!-- 회원 스톡 정보 업데이트 -->
    <update id="updateMemberStockInfo">
        UPDATE member_stock_info
        SET current_total_quantity = #{newQuantity},
        current_total_amount = #{newAmount},
        updated_at = SYSDATE
        WHERE member_stock_info_id = #{memberStockInfoId}
    </update>
    
</mapper>
