<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.phoenix.planet.mapper.MemberMapper">
    
    <!-- ResultMap: 컬럼명 ↔ DTO 필드명 매핑 -->
    <resultMap id="MemberResultMap" type="org.phoenix.planet.dto.member.Member">
        <id column="member_id" property="id"/>
        <result column="email" property="email"/>
        <result column="name" property="name"/>
        <result column="profile_url" property="profileUrl"/>
        <result column="pwd_hash" property="pwdHash"/>
        <result column="provider" property="provider"/>
        <result column="address" property="address"/>
        <result column="detail_address" property="detailAddress"/>
        
        <!-- Enum: 문자열 저장 기준 (ex. 'ADMIN', 'USER' / 'M','F') -->
        <result column="ROLE" property="role"
            javaType="org.phoenix.planet.constant.Role"
            typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        <result column="SEX" property="sex"
            javaType="org.phoenix.planet.constant.Sex"
            typeHandler="org.apache.ibatis.type.EnumTypeHandler"/>
        
        <!-- Oracle DATE ↔ Java LocalDateTime -->
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"
            javaType="java.time.LocalDateTime"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"
            javaType="java.time.LocalDateTime"/>
    </resultMap>
    
    <!-- INSERT: Oracle 시퀀스 사용 (MEMBER_SEQ 가정) -->
    <insert id="insert" parameterType="org.phoenix.planet.dto.member.Member">
        <!-- PK 미리 생성해서 DTO.id에 주입 -->
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            SELECT SEQ_MEMBER.NEXTVAL FROM DUAL
        </selectKey>
        
        INSERT INTO MEMBER (
        member_id,
        email,
        name,
        profile_url,
        pwd_hash,
        provider,
        address,
        detail_address,
        "ROLE",
        "SEX",
        updated_at
        ) VALUES (
        #{id},
        #{email,        jdbcType=VARCHAR},
        #{name,         jdbcType=VARCHAR},
        #{profileUrl,   jdbcType=VARCHAR},
        #{pwdHash,      jdbcType=VARCHAR},  <!-- 여기! -->
        #{provider,     jdbcType=VARCHAR},
        #{address,      jdbcType=VARCHAR},
        #{detailAddress,jdbcType=VARCHAR},
        #{role, javaType=org.phoenix.planet.constant.Role,
               typeHandler=org.apache.ibatis.type.EnumTypeHandler, jdbcType=VARCHAR},
        #{sex,  javaType=org.phoenix.planet.constant.Sex,
               typeHandler=org.apache.ibatis.type.EnumTypeHandler, jdbcType=VARCHAR},
        SYSDATE
        )
    </insert>
    
    <update id="updateProfileUrl" parameterType="map">
        UPDATE MEMBER
        SET profile_url = #{profileUrl},
        updated_at = SYSDATE
        WHERE member_id = #{id}
    </update>
    
    <update id="updatePwdHash" parameterType="map">
        UPDATE MEMBER
        SET pwd_hash = #{pwdHash},
        updated_at = SYSDATE
        WHERE member_id = #{id}
    </update>
    
    <select id="findById" parameterType="long" resultMap="MemberResultMap">
        SELECT
        member_id,
        email,
        name,
        profile_url,
        pwd_hash,
        provider,
        address,
        detail_address,
        "ROLE",
        "SEX",
        created_at,
        updated_at
        FROM MEMBER
        WHERE member_id = #{id}
    </select>
    
    <select id="findByEmail" parameterType="string" resultMap="MemberResultMap">
        SELECT
        member_id,
        email,
        name,
        profile_url,
        pwd_hash,
        provider,
        address,
        detail_address,
        "ROLE",
        "SEX",
        created_at,
        updated_at
        FROM MEMBER
        WHERE email = #{email}
    </select>

</mapper>