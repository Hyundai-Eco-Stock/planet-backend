server:
  port: 8080

fcm:
  credentials:
    file: ${FIREBASE_CREDENTIALS_PATH}

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 12MB

  jackson:
    time-zone: Asia/Seoul

  elasticsearch:
    uris: ${ES_ENDPOINT}
    username: ${ES_USERNAME}
    password: ${ES_PASSWORD}

  kafka:
    bootstrap-servers: ${KAFKA_HOST}:${KAFKA_PORT}

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
        enable.idempotence: true
        max.in.flight.requests.per.connection: 1

    consumer:
      group-id: planet-app
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"

    listener:
      ack-mode: RECORD
      concurrency: 1

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${GOOGLE_MAIL_EMAIL}
    password: ${GOOGLE_MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

mybatis:
  mapper-locations: classpath:/mapper/**/*.xml
  type-aliases-package: org.phoenix.planet
  configuration:
    map-underscore-to-camel-case: true

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}

    region:
      static: ap-northeast-2

s3:
  upload-path:
    member-profile: release/member-profile/
    product-img: release/product-img/
  upload-bucket:
    name: ${S3_BUCKET_NAME}

cloudfront:
  distribution-domain: ${CLOUDFRONT_DISTRIBUTION_DOMAIN}
  key-pair-id: ${CLOUDFRONT_KEY_PAIR_ID}
  private-key-path: ${CLOUDFRONT_PRIVATE_KEY_PATH}

toss:
  payments:
    api-url: https://api.tosspayments.com
    secret-key: ${TOSS_SECRET_KEY}

